
ruby:
  item_ids = block[:items].map { |item| item[:id] }
  showImages = block[:withImages] != false
  records = block[:type].classify.constantize.published.where(id: item_ids).all
  return unless records.present?

.content__catalog class="content__catalog--#{block[:type]}"
  - if block[:title].present? && block[:type] != 'treatments'
    h2.content__catalog__header
      = inline_svg_tag 'graphics/leaves.svg', class: 'content__catalog__header__leaf'
      .content__catalog__header__text = block[:title]
      = inline_svg_tag 'graphics/leaves.svg', class: 'content__catalog__header__leaf'

  - if block[:type] == 'articles' || !show_images
    - image_sizes = '(max-width: 767px) calc(100vw - 48px), 360px'

    .content__catalog__sidetext = render_decoration :sidetext, block, alignment: :left

    .content__catalog__article_grid data-max-columns=3 class=(records.length < 3 ? 'content__catalog__article_grid--centered' : 'js-grid')
      - records.first(3).each do |record|
        article.preview.content__catalog__article
          - if show_images
            a.content__catalog__media.preview__media href=polymorphic_path(record)
              = smart_image_tag record.thumbnail, image_sizes, lazy: false, class: 'preview__media__thumbnail', alt: record.name

          a.preview__title href=polymorphic_path(record)
            = record.name
          p.preview__text = record.excerpt
          .preview__meta
            a.preview__meta__link href=polymorphic_path(record)
              = t('articles.read_more')
              .icon.icon--breadcrumb

    - if records.size > 3
      .content__catalog__loadmore.js-loadmore
        button.button.button--box
          = translate 'content.show_more'
        template
          - records.drop(3).each do |record|
            article.preview.content__catalog__article
              h3.preview__title = record.name
              p.preview__text = record.excerpt
              .preview__meta
                a.preview__meta__link href=polymorphic_path(record)
                  = t('articles.read_more')
                  .icon.icon--breadcrumb

  - elsif block[:type] == 'treatments'
    - image_sizes = '(max-width: 767px) calc(100vw - 48px), (max-width: 448px) 400px, (max-width: 1023px) 40vw, 400px'

    .gradient-wrapper
      .gradient.gradient--right.gradient--tall.gradient--fixed-height.gradient--orange

    h2.content__catalog__title
      = block[:title] || (block[:decorations] && block[:decorations][:sidetext] && block[:decorations][:sidetext][:text])
    .content__catalog__sidetext = render_decoration :sidetext, block, alignment: :left

    .content__catalog__treatment_list.excerpt_list
      - records.first(2).each_with_index do |treatment, index|
        article.content__catalog__treatment.excerpt.excerpt--simple class="excerpt--#{index.even? ? 'right' : 'left'}"
          = smart_image_tag treatment.thumbnail, '100vw', class: 'excerpt__image', alt: treatment.name
          .excerpt__content
            h3.excerpt__title = treatment.name
            p.excerpt__text = treatment.excerpt
            a.excerpt__link href=treatment_path(treatment)
              = t('treatments.read_more')
              .icon.icon--breadcrumb
          .clearfix

    - if records.size > 2
      .content__catalog__loadmore.js-loadmore
        button.button.button--box
          = translate block[:type] == 'treatments' ? 'treatments.show_more' : 'content.show_more'
        template
          - records.drop(2).each_with_index do |treatment, index|
            article.content__catalog__treatment.excerpt.excerpt--simple class="excerpt--#{index.even? ? 'right' : 'left'}"
              = smart_image_tag treatment.thumbnail, image_sizes, class: 'excerpt__image', alt: treatment.name
              .excerpt__content
                h3.excerpt__title = treatment.name
                p.excerpt__text = treatment.excerpt
                a.excerpt__link href=treatment_path(treatment)
                  = t('treatments.read_more')
                  .icon.icon--breadcrumb

              .clearfix

  - elsif block[:type] == 'meditations'
    .gradient-wrapper
      .gradient.gradient--right.gradient--tall.gradient--blue

    - if block[:decorations] && block[:decorations][:sidetext]
      .content__catalog__circle
        = render_decoration :circle, { decorations: { circle: true } }
      /h2.content__catalog__title = block[:decorations][:sidetext][:text]
      .content__catalog__sidetext
        = render_decoration :sidetext, block, static: records.count > 1, alignment: :right

    .carousel class='js-carousel' data-style='video'
      - records.each do |meditation|
        figure.carousel__item class='js-carousel-item' data-gtm-label=meditation.name
          a.carousel__video.video href=meditation_path(meditation)
            .video__inner
              .video__thumbnail
                / TODO: Maybe try to find a way to re-enable lazyloading
                - image_sizes = '(max-width: 767px) calc(100vw - 48px), (max-width: 919px) calc(100vw - 98px), (max-width: 1198px) 50vw, 548px'
                = smart_image_tag meditation.image, image_sizes, lazy: false
                .video__button

          figcaption.carousel__name = meditation.name
