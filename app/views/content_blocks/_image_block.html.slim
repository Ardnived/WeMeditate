
- position = %w[left right narrow wide].include?(block[:position]) ? block[:position] : 'narrow'
- is_callout = %w[left right].include?(position)
- is_gallery = block[:asGallery] == true
- position = nil if is_gallery
- items = is_gallery ? block[:items] : [block[:items].first]

- classes = []
- classes << "content__image--#{position}" if position

- if is_gallery
  - classes << 'content__image--gallery'
  - classes << 'js-grid js-gallery'
- elsif is_callout
  - classes << 'content__image--callout'
- else
  - classes << 'content__image--center'

- if position == 'wide'
  - image_sizes = '100vw'
- elsif position == 'narrow'
  - image_sizes = '(max-width: 814px) calc(100vw - 48px), 400px'
- else
  - image_sizes = '(max-width: 814px) calc(100vw - 48px), 766px'

.content__image class=classes
  - items.each do |item|
    figure.content__image__item
      .content__image__item__media
        = smart_image_tag record.media_file(item[:image][:id]), image_sizes, lazy: false, class: 'content__image__img', alt: (item[:alt] || item[:caption])

        - if item[:credit].present?
          .content__image__credit #{translate 'content.credit'} â€¢ #{item[:credit]}

      - unless is_gallery || is_callout
        .content__image__triangle = render_decoration :triangle, block

      .content__image__item__content
        - if item[:caption].present?
          figcaption.content__image__caption = item[:caption]

  - if is_gallery
    .content__image__triangle = render_decoration :triangle, block
