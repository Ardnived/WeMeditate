
ruby:
  invert = 'true' # TODO: This needs to be configurable.
  image_url = record.media_file(block[:image][:id]).large.url if block[:image]
  background = image_url ? "background-image: url(#{image_url})" : nil

.content__splash.content__splash--stream class='js-splash' style=background data-invert=invert
  .content__splash__wrapper-live
    .content__splash__wrapper
      h1.content__splash__title = translate('streams.live.title')
      .content__splash__action
        - if record.video_conference_url.present?
          /.content__splash__divider
          .content__splash__conference
            a title=translate("streams.live.action.#{record.video_conference_type}") href=record.video_conference_url target='_blank'
              img src=image_path("streams/#{record.video_conference_type}.png")
            span = translate("streams.live.action.#{record.video_conference_type}")
        - else
          .content__splash__watch
            a title=translate('streams.live.action.stream') data-lity=true href=record.stream_url
            span = translate('streams.live.action.stream')

      .content__splash__description = translate(record.video_conference_url.present? ? 'streams.live.alt_description' : 'streams.live.description')

  .content__splash__wrapper-countdown
    .content__splash__wrapper
      h1.content__splash__title = block[:title]
      .content__splash__description = block[:text]

      .content__splash__countdown.content__splash__countdown--hidden class='js-countdown' data-time=(record.next_stream_time.to_f * 1000) data-duration=(record.duration * 1000)
        span class='js-countdown-days' data-label=translate('streams.timing.days')
        span.separator = ' '
        span class='js-countdown-hours' data-label=translate('streams.timing.hours')
        span.separator = ':'
        span class='js-countdown-minutes' data-label=translate('streams.timing.minutes')
        span.separator = ':'
        span class='js-countdown-seconds' data-label=translate('streams.timing.seconds')

      .content__splash__action
        = inline_svg_tag 'graphics/leaves.svg', class: 'content__splash__action__leaf'
        a.content__splash__action__text href=block[:url] = block[:action]
        = inline_svg_tag 'graphics/leaves.svg', class: 'content__splash__action__leaf'

- location = request&.location&.data
- time_zone = ActiveSupport::TimeZone.new(location['timezone']) rescue Time.zone

javascript:
  console.log("Your IP Address", "#{request.remote_ip}", "(#{request.env['HTTP_X_FORWARDED_FOR']})");
  console.log("Stream Time Zone", "#{record.time_zone.now}");
  console.log("Next Stream Time", "#{record.next_stream_time}");
  console.log("Your Detected Location", "#{location&.dig('timezone')}", "#{location&.dig('ip')}", "#{location&.to_json}");
  console.log("Your Time Zone", "#{time_zone&.tzinfo&.identifier}");
  console.log("Your Detected Time", "#{time_zone&.now}");
  console.log("Your Current Time", new Date(), Intl.DateTimeFormat().resolvedOptions().timeZone);
