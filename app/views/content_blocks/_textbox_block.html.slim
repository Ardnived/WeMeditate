
- isWisdom = (block[:asWisdom] == true)
- isVideo = (block[:asVideo] == true)
- classes = ["content__textbox--#{block[:alignment]}"]
- classes << 'content__textbox--invert' if isWisdom || block[:invert] == true
- classes << "content__textbox--#{block[:stretch] == true ? 'stretch' : 'overlay'}" unless isWisdom
- classes << 'content__textbox--wisdom' if isWisdom
- classes << 'content__textbox--video' if isVideo

- return unless block[:image].is_a?(Hash)

.content__textbox class=classes
  - if isWisdom
    .gradient.gradient--wisdom class="gradient--#{block[:alignment] == 'right' ? 'left' : 'right'}"
  - elsif block[:alignment] != 'center'
    .content__textbox__decoration.content__textbox__decoration--gradient
      .content__textbox__gradient
        = render_decoration :gradient, block, size: %i[wide long]
    
  .content__textbox__wrapper
    .content__textbox__decoration.content__textbox__decoration--sidetext
      .content__textbox__sidetext
        = render_decoration :sidetext, block, alignment: (block[:alignment] == 'right' ? :right : :left)

    - if isWisdom
      = inline_svg 'content/ancient-wisdom.svg', class: 'content__textbox__graphic'

    - if isVideo
      h2.content__textbox__title = block[:title]

    .content__textbox__image
      .content__textbox__img
        = smart_image_tag record.media_file(block[:image][:id]), block[:alignment] == 'center' ? '100vw' : '(max-width: 767px) calc(60vw - 48px), 50vw'
        .content__textbox__circle
          = render_decoration :circle, block

        - if isVideo
          .content__textbox__action
            - vimeo_id = block[:url].match(%r{/(\d+)/?\z})[1]
            a.content__textbox__action__button.js-video href=block[:url] data-id=vimeo_id data-mfp-src='#video-popup'
            .content__textbox__action__text = block[:action]

    - unless isVideo
      .content__textbox__box_wrapper
        .content__textbox__box class=('js-animate' if block[:invert] == true && block[:alignment] == 'center')
          h2.content__textbox__title = block[:title]
          .content__textbox__text
            = simple_format(block[:text].gsub('<br>', "\n").html_safe).gsub("\n", '').html_safe
            - if block[:action].present? && block[:url].present?
              a.content__textbox__button.button.button--box.button--large href=block[:url] = block[:action]

.content__textbox__decoration.content__textbox__decoration--triangle
  .content__textbox__triangle
    = render_decoration :triangle, block
