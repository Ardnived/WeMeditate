
- content_for :title, @model.model_name.human(count: 1)
- reorder = (params[:reorder] == 'true')
- model_name = @model.model_name.human(count: 1).downcase
- allow = policy(@record)

- unless reorder
  .table-actions
    .ui.tiny.compact.basic.buttons
      .ui.active.button
        - status = @record.published? ? (@record.draftable? && @record.has_draft? ? :pending_changes : :published) : :draft
        = translate(status, scope: %i[admin status], page: model_name)

      - if allow.review? && @record.ready_for_review?
        - action_text = :review
        - action_key = @record.ready_for_review?(:content) ? :review : :edit
      - else
        - action_text = :edit_details
        - action_key = :edit

      a.ui.button href=polymorphic_admin_path([action_key, :admin, @record])
        i.edit.icon
        = translate(action_text, scope: %i[admin action simple])

      - if @record.has_translation?
        .ui.floating.dropdown.icon.button
          i.dropdown.icon
          .menu
            - if @record.has_draft?
              a.item href=polymorphic_admin_path([:edit, :admin, @record])
                i.edit.icon
                = translate 'admin.action.target.edit_details'
            - if @record.published?
              - url = @record.is_a?(StaticPage) ? static_page_url_for(@record) : polymorphic_url(@record)
              a.item href=url target='_blank'
                i.eye.icon
                = translate 'admin.action.descriptive.show'
            - if allow.preview?
              a.item href=polymorphic_admin_path([:preview, :admin, @record]) target='_blank'
                i.eye.icon
                = translate 'admin.action.descriptive.preview'
            - if allow.destroy?
              a.item href=polymorphic_admin_path([:admin, @record]) data={ method: 'delete', confirm: translate('admin.messages.confirm_destroy') }
                i.warning.sign.icon
                = translate 'admin.action.target.destroy', record: model_name

.details
  h3 = @record.preview_name
  = render "admin/details/#{@record.model_name.param_key}", record: @record

  - if @record.draftable?
    .ui.small.details.list
      = record_detail 'bullhorn', record_published_at_status if @record.respond_to? :published_at
      = record_detail 'edit', record_modified_at_status
      - if owner = @record.try(:owner)
        - owned_by = translate('admin.details.owned_by', owner: owner.name)
        - if policy(owner).edit?
          - view_user = translate('admin.action.target.show', record: User.model_name.human)
          = record_detail 'user', owned_by, view_user, url: polymorphic_admin_path([:edit, :admin, owner])
        - else
          = record_detail 'user', owned_by

.clearfix

.ui.divider

- if allow.write?
  .table-actions
    = table_action translate(:edit_content, scope: %i[admin action simple]), 'pencil alternate', polymorphic_admin_path([:write, :admin, @record])


h4 = translate 'admin.content.outline_title', page: @model.model_name.human

= content_outline @record

.ui.hidden.divider
= table_link translate('admin.action.target.back', records: @model.model_name.human(count: -1)), 'left arrow', polymorphic_admin_path([:admin, @model])
