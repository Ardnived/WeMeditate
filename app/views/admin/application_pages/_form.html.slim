
- model = page.class
- allow = policy(page)
- show_title_field = true unless local_assigns[:show_title_field] == false

= simple_form_for [:admin, page], html: { id: 'page-form', class: "#{'error' if page.errors.present?}", novalidate: true } do |f|
  = f.error :base

  - if show_title_field
    = f.input :title
    = f.input :slug, label: (page.new_record? ? t("activerecord.attributes.#{f.object.model_name.i18n_key}.slug") : url_for(page)), wrapper: :slug

  = yield f

  = f.input :sections do
    div class="#{'sort-list' if allow.update_structure?}"
      = f.fields_for :sections do |ff|
        = render 'admin/sections/form', f: ff, allow: allow

      - if allow.update_structure?
        = link_to_add_fields f, :sections, { locals: { allow: allow } }, { class: 'ui tiny compact basic labeled icon button' } do
          i.plus.icon
          = translate 'action.target.add', target: Section.model_name.human
      - elsif sections.empty?
        .ui.label = translate 'messages.not_set'

  .ui.hidden.divider

  p
    a.ui.basic.button href=url_for([:admin, model])
      i.left.arrow.icon
      = translate 'action.target.back', target: model.model_name.human(count: -1)

    - if policy(page).review?
      button.ui.basic.primary.button
        = translate 'action.update_and_review_changes'
    - else
      button.ui.basic.positive.button
        = translate 'action.update'
      //button.ui.basic.positive.button
        = translate 'action.update_and_done'

