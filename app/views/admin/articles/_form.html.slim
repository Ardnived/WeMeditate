
- allow = policy(@article)

= render 'admin/application_pages/form', page: @article do |f|
  = f.association :category, disabled: !allow.update_structure?
  = f.input :priority, collection: Article.priorities.map {|k, v| [human_enum_name(Article, :priority, k), k]}, disabled: !allow.update_structure?

  = f.input :attachments do
    - if @article.new_record?
      p = t('messages.cant_add_media_to_new_record', target: Article.model_name.humanize)
    - else
      #uploader data-endpoint=upload_to_admin_article_path(@article) data-files=attachments_json(@article) data-authenticity-token=form_authenticity_token

  = f.input :banner, label: false do
    = f.label :banner
    = render 'admin/application/attachment_select', f: f, field: :banner, attachments: @article.attachments

  = f.input :thumbnail, label: false do
    = f.label :thumbnail
    = render 'admin/application/attachment_select', f: f, field: :thumbnail, attachments: @article.attachments

  = f.input :video, label: false do
    = f.label :video
    = render 'admin/application/attachment_select', f: f, field: :video, attachments: @article.attachments

  = f.input :date, as: :string, wrapper_html: { class: 'ui date picker' }
  = f.input :excerpt, as: :text, input_html: { rows: 3 }
