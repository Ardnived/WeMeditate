
- allow = policy(@article)

= render 'admin/application_pages/form', page: @article do |f|
  .field
    = f.label :category
    = f.select :category_id, Category.all.map {|c| [c.name, c.id] }, { include_blank: 'Select Category...' }, { class: 'ui dropdown', disabled: !allow.update_structure? }

  .field
    = f.label :priority
    = f.select :priority, Article.priorities.map {|k, v| [human_enum_name(Article, :priority, k), k]}, {}, { class: 'ui fluid dropdown', disabled: !allow.update_structure? }

  .field
    = f.label :banner
    - if allow.update_structure?
      .ui.fluid.icon.file.input
        i.image.icon
        = f.file_field :banner
        = f.hidden_field :banner_cache
    
    - if @article.banner.present?
      = image_tag @article.banner_url, class: 'ui rounded image'
    - elsif not allow.update_structure?
      .ui.label = translate 'messages.not_set'

  .field
    = f.label :thumbnail
    - if allow.update_structure?
      .ui.fluid.icon.file.input
        i.image.icon
        = f.file_field :thumbnail
        = f.hidden_field :thumbnail_cache
    
    - if @article.thumbnail.present?
      a.ui.label.link
        = @article.thumbnail_identifier.humanize
    - elsif not allow.update_structure?
      .ui.label = translate 'messages.not_set'

  .field
    = f.label :excerpt
    = f.text_area :excerpt, rows: 3
     