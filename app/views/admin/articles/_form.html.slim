
= form_for [:admin, @article], html: { class: "ui form #{'error' if @article.errors.present?}" } do |f|
  - if @article.errors.present?
    .ui.small.error.message
      .header Errors
      ul.list
        - @article.errors.messages.each do |field, errors|
          - errors.each do |error|
            li #{field} #{error}

  .field
    = f.label :title
    = f.text_field :title

    - unless @article.new_record?
      .reset-slug
        i.linkify.icon
        em = @article.slug
        = f.label :reset_slug do
          = f.check_box :reset_slug, { checked: false }, 'yes', nil
          '  reset slug

  .field
    = f.label :category
    = f.select :category_id, Category.all.map {|c| [c.name, c.id] }, { include_blank: 'Select Category...' }, { class: 'ui dropdown' }

  .field
    = f.label :priority, 'Visibility'
    = f.select :priority, Article.priorities.map {|k, v| [k.humanize.titlecase, k]}, {}, { class: 'ui fluid dropdown' }

  .field
    label Content
    .sort-list
      = f.fields_for :sections do |ff|
        = render 'section_fields', f: ff

      = link_to_add_fields f, :sections, {}, { class: 'ui tiny compact basic labeled icon button' } do
        i.plus.icon
        ' Add Content

  .ui.hidden.divider

  p
    a.ui.basic.button href=admin_articles_url
      i.left.arrow.icon
      ' Back to Articles

    button.ui.basic.positive.button
      ' Save
