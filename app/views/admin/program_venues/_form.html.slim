
- program_venue = f.object

.ui.styled.sortable.program-venue.accordion.child id=dom_id(program_venue)
  - unless program_venue.new_record?
    = f.hidden_field :id

  = f.hidden_field :order, class: 'sorting-order'

  .title
    - if program_venue.new_record?
      = ProgramVenue.model_name.human
    - elsif program_venue.address.present?
      = program_venue.address

  .content
    .form
      .field
        .ui.right.labeled.input
          = f.text_field :address, placeholder: ProgramVenue.human_attribute_name(:address)
          - if program_venue.latitude.present? && program_venue.longitude.present?
            a.ui.tag.label href=coordinates_url(program_venue.latitude, program_venue.longitude) target="_blank"
              i.marker.icon
              span #{program_venue.latitude}, #{program_venue.longitude}
          - elsif not program_venue.new_record?
            .ui.orange.tag.label
              i.warning.sign.icon
              span #{t 'messages.latlong_not_found'}

      .field
        = f.text_field :room_information, placeholder: ProgramVenue.human_attribute_name(:room_information)

      .field
        label = ProgramTime.model_name.human(count: -1)
        
        .fields
          .six.wide.field
            small = ProgramTime.human_attribute_name(:day).upcase
          .five.wide.field
            small = ProgramTime.human_attribute_name(:start_time).upcase
          .five.wide.field
            small = ProgramTime.human_attribute_name(:end_time).upcase
          
          // This blank icon is for spacing
          i.icon

        - program_venue.program_times.each do |program_time|
          = f.fields_for :program_times, program_time do |ff|
            = render 'admin/program_times/form', f: ff

        = link_to_add_fields f, :program_times, {}, { class: 'ui tiny compact basic labeled icon button' } do
          i.plus.icon
          = translate 'action.target.add', target: ProgramTime.model_name.human

    - if program_venue.new_record?
      .ui.tiny.compact.basic.labeled.icon.button.remove-child-button
        i.trash.icon
        = translate 'action.target.remove', target: ProgramVenue.model_name.human
    - else
      .ui.checkbox
        = f.check_box :_destroy, class: 'delete-child'
        = f.label :_destroy, t('action.target.destroy', target: ProgramVenue.model_name.human)

    .clearfix
