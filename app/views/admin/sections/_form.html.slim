
- section = f.object

.ui.styled.sortable.section.accordion.child id=dom_id(section) class="type-#{section.content_type} format-#{section.format}"
  - unless section.new_record?
    = f.hidden_field :id

  - if allow.update_structure?
    = f.hidden_field :order, class: 'sorting-order'

  .title
    - if allow.update_structure?
      i.black.bars.icon.handle

    - if section.label.present?
      = section.label
    - elsif section.new_record? and not section.special?
      ' New Section
    - elsif section.format.present?
      - label_placeholder = human_enum_name(section, :format)
    - else
      - label_placeholder = human_enum_name(section, :content_type)

    = label_placeholder

    - if section.special? or not section.new_record?
      .ui.top.right.attached.label
        = content_type_icon section.content_type.to_sym
        = human_enum_name(section, :content_type) if section.special?

  .content
    .form
      - if section.special?
        = f.hidden_field :content_type
        = f.hidden_field :format
      - else
        = f.input :label, placeholder: label_placeholder
        = f.input :content_type, collection: Section.content_types.except(:special).keys.map {|k| [human_enum_name(section, :content_type, k), k]}, prompt: 'Choose a type', disabled: !allow.update_structure?

      - if section.special?
        = render "admin/sections/type_fields/special/#{section.format}", f: f, section: section, allow: allow
      - else
        - Section.content_types.except(:special).each do |type, v|
          .grouped.fields.for class=type
            .ui.divider
            = render "admin/sections/type_fields/#{type}", f: f, section: section, allow: allow

    - if allow.update_structure? and not section.special?
      .ui.divider

      - if section.new_record?
        .ui.tiny.compact.basic.labeled.icon.button.remove-child-button
          i.trash.icon
          = translate 'action.target.remove', target: Section.model_name.human
      - else
        .ui.checkbox
          = f.check_box :_destroy, class: 'delete-child'
          = f.label :_destroy, t('action.target.destroy', target: Section.model_name.human)

      .clearfix
