
= f.input :format, collection: Section::TEXT_FORMATS.map {|k| [human_enum_name(section, :format, k), k]}, disabled: !allow.update_structure?, wrapper_html: { class: 'sub field-format' }
= f.input :title, wrapper_html: { class: 'sub' }
= f.input :text, as: :text, input_html: { rows: 2 }, wrapper_html: { class: 'sub' }

= f.input :quote, as: :text, input_html: { rows: 1 }, wrapper_html: { class: 'sub for quote' }

= f.input :images, as: :file, multiple: true, wrapper: :ui_file_input, icon: file_type_icon(:image), files: f.object.images, wrapper_html: { class: 'sub for image' }, input_html: { accept: file_type_accepts(:image) }
= f.input :credit, wrapper_html: { class: 'sub for image' }

= f.input :action, wrapper_html: { class: 'sub for action' }
= f.input :url, as: :url, wrapper_html: { class: 'sub for action' }

= f.fields_for :special, f.object.special do |ff|
  - items = f.object.special['items'] rescue []

  = render 'admin/application/repeatable_fields', f: ff, attribute: :items, items: items, subfield: true, for: [:grid] do |fff, item|
    = fff.text_field :title, value: item['title'], placeholder: t("activerecord.attributes.#{f.object.model_name.i18n_key}.title"), name: "#{fff.object_name}[title][]"
    = fff.text_area :text, value: item['text'], placeholder: t("activerecord.attributes.#{f.object.model_name.i18n_key}.text"), name: "#{fff.object_name}[text][]", rows: 1
    = fff.url_field :url, value: item['url'], placeholder: t("activerecord.attributes.#{f.object.model_name.i18n_key}.url"), name: "#{fff.object_name}[url][]"
