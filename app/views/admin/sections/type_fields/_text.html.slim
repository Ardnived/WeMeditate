
= f.input :format, collection: Section::TEXT_FORMATS.map {|k| [human_enum_name(section, :format, k), k]}, disabled: !allow.update_structure?, wrapper_html: { class: 'sub field-format' }
= f.input :title, wrapper_html: { class: 'sub' }
= f.input :text, as: :rich_text, input_html: { rows: 2 }, wrapper_html: { class: 'sub' }

= f.input :quote, as: :text, input_html: { rows: 1 }, wrapper_html: { class: 'sub for quote' }

= f.input :action, wrapper_html: { class: 'sub for action' }
= f.input :url, as: :url, wrapper_html: { class: 'sub for action' }

= f.input :credit, wrapper_html: { class: 'sub for image' }

= f.fields_for :extra, f.object do |ff|
  - items = f.object.extra_attr 'items', []
  - color = f.object.extra_attr 'color'
  - image_uuid = f.object.extra_attr 'image_uuid'

  = ff.input :image, wrapper_html: { class: 'sub for image' } do
    = render 'admin/partials/attachment_select', f: ff, field: :image, value: image_uuid, attachments: section.page.attachments

  = render 'admin/partials/repeatable_fields', f: ff, attribute: :items, items: items, subfield: true, for: [:grid] do |fff, item|
    = fff.text_field :title, value: item['title'], placeholder: Section.human_attribute_name(:title), name: "#{fff.object_name}[title][]"
    = fff.text_area :text, value: item['text'], placeholder: Section.human_attribute_name(:text), name: "#{fff.object_name}[text][]", rows: 1
    = fff.url_field :url, value: item['url'], placeholder: Section.human_attribute_name(:url), name: "#{fff.object_name}[url][]"

  = render 'admin/partials/repeatable_fields', f: ff, attribute: :items, items: items, subfield: true, for: [:columns] do |fff, item|
    = fff.text_field :title, value: item['title'], placeholder: Section.human_attribute_name(:title), name: "#{fff.object_name}[title][]"
    = fff.text_area :text, value: item['text'], placeholder: Section.human_attribute_name(:text), name: "#{fff.object_name}[text][]", rows: 1
    = render 'admin/partials/attachment_select', f: fff, placeholder: Section.human_attribute_name(:image), name: "#{fff.object_name}[image_uuid][]", value: item['image_uuid'], attachments: section.page.attachments

  = ff.input :color, collection: [:light, :dark].map {|c| [human_enum_name(Section, :color, c), c] }, selected: color, label: Section.human_attribute_name(:color), wrapper_html: { class: 'sub for background' }, required: false
  = render 'admin/sections/decoration_fields', f: ff, collection: [:sidetext, :triangle, :circle, :gradient]
